提供原因：
c/c++老版本的rand（）存在一定的问题，在转换rand随机数的范围，类型或者分布时，常常会引入非随机性。

定义在<random> 中的随机数库通过一组协作类来解决这类问题：随机数引擎 和 随机数分布类

一个给定的随机数发生器一直会生成相同的随机数序列。一个函数如果定义了局部的随机数发生器，应该将（引擎和分布对象）定义为 static 的。否则每次调用函数都会生成相同的序列。

随机数发生器会生成相同的随机数序列这一个特性在调试 中很有用。
一旦我们调试完毕，我们通常希望每次运行程序都会生成不同的随机结果，可以通过提供一个 种子 来达到这一目的。

有两种设置种子的方式：
1. 创建引擎对象时提供种子 Engine e(s);
2. 调用引擎的 seed 成员 e.seed(s);

最常用的是调用系统函数 time ， 定义在 <ctime> ，单位是秒计

default_random_engine e(time(0));    //稍微随机些种子
